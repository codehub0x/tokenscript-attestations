buildscript {
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

plugins {
    id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.logging.log4j:log4j-api:2.13.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.0'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.66'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.66'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
    implementation('com.amazonaws:aws-lambda-java-core:1.2.0')
    implementation('com.amazonaws:aws-lambda-java-events:2.2.6')
    implementation 'org.json:json:20200518'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    implementation 'org.web3j:core:4.6.0'
    implementation group: 'com.github.cliftonlabs', name: 'json-simple', version: '3.1.0'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
            exclude 'id' // the code is being reworked on
            exclude 'dk/alexandra/stormbird/cheque' // the code depends on objsys library
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
            exclude 'id' // the code is being reworked on
            exclude 'dk/alexandra/stormbird/cheque' // the code depends on objsys library
        }
    }
}

test {
    useJUnitPlatform()
}

shadowJar {
    manifest {
        attributes 'Main-Class': 'com.alphawallet.attestation.demo.Demo'
    }
}

task packageFat(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

task packageLibs(type: Jar) {
    into('java/lib') {
        from configurations.runtimeClasspath
    }
    dirMode = 0755
    fileMode = 0755
}

task packageSkinny(type: Jar) {
    from compileJava
    from processResources
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

build.dependsOn packageSkinny
